# version: "3"

# services:
#   mongo-express:
#     image: mongo-express
#     ports:
#       - 8081:8081
#     environment:
#       ME_CONFIG_MONGODB_SERVER: mongo
#       ME_CONFIG_BASICAUTH_USERNAME: admin
#       ME_CONFIG_BASICAUTH_PASSWORD: q
#       ME_CONFIG_MONGODB_PORT: 27017
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
#     restart: always
#     depends_on:
#       - mongo
#     links:
#       - mongo
#     networks:
#       - app-network

#   mongo:
#     image: mongo:latest
#     container_name: mongo
#     environment:
#       MONGO_INITDB_DATABASE: workrosterapp
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: rootpassword
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongodb_data_container:/data/db
#     networks:
#       - app-network

#   backend:
#     build:
#       context: ./app/backend
#       dockerfile: Dockerfile
#     environment:
#       MONGO_URI: "mongodb://mongo:27017"
#       NODE_ENV: production
#       JWT_SECRET: bobisuruncle
#     depends_on:
#       - mongo
#     ports:
#       - "3002:3002"
#     networks:
#       - app-network

#   frontend:
#     build:
#       context: ./app/frontend
#       dockerfile: Dockerfile
#     depends_on:
#       - backend
#     ports:
#       - "8000:8000"
#     networks:
#       - app-network

# networks:
#   app-network:
#     driver: bridge

# volumes:
#   mongodb_data_container:

version: "3.9"

services:
  server:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    ports:
      - "80:8080"
    depends_on:
      - mongo
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://mongo:27017
      JWT_SECRET: bobisuruncle
    networks:
      - app-network
  mongo:
    image: mongo:latest
    volumes:
      - data-volume:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network
  client:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    depends_on:
      - server
    ports:
      - "8000:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  data-volume:
